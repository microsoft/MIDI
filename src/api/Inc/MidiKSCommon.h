// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://aka.ms/midi
// ============================================================================


#pragma once

// apply a timeout to the wait for overlapped operations to complete, if
// the ioctl doesn't complete within 5 seconds, it's safe to say that it's never going to complete,
// fail the request.
#define IOCTL_TIMEOUT 5000

HRESULT 
SyncIoctl(
    _In_ HANDLE  hHandle,
    _In_ ULONG   ulIoctl,
    _In_ PVOID   pvInBuffer,
    _In_ ULONG   cbInBuffer,
    _In_ PVOID   pvOutBuffer,
    _In_ ULONG   cbOutBuffer,
    _In_opt_ PULONG  pulBytesReturned
);

HRESULT 
SyncIoctlTimeout(
    _In_ HANDLE  hHandle,
    _In_ ULONG   ulIoctl,
    _In_ PVOID   pvInBuffer,
    _In_ ULONG   cbInBuffer,
    _In_ PVOID   pvOutBuffer,
    _In_ ULONG   cbOutBuffer,
    _In_opt_ PULONG  pulBytesReturned,
    _In_ ULONG   timeout = IOCTL_TIMEOUT
);

HRESULT
PinPropertySimple(
    _In_ HANDLE filter,
    _In_ ULONG   pinId,
    _In_ REFGUID guidPropertySet,
    _In_ ULONG   property,
    _In_ PVOID   value,
    _In_ ULONG   valueSize);

HRESULT
PinPropertyAllocate(
    _In_ HANDLE filter,
    _In_ ULONG   pinId,
    _In_ REFGUID guidPropertySet,
    _In_ ULONG   property,
    _Out_ PVOID   *value,
    _Out_opt_ ULONG   *valueSize);

HRESULT
FilterInstantiate(
    _In_z_ const WCHAR* filterName,
    _In_ HANDLE* filterHandle
);

HRESULT
InstantiateMidiPin(
    _In_ HANDLE filter,
    _In_ ULONG pinId,
    _In_ MidiTransport transport,
    _In_ HANDLE* pinHandle
);

BOOL
IsAutogeneratedPinName(
    _In_z_ const WCHAR* filterName,
    _In_ ULONG pinId,
    _In_z_ const WCHAR* nameToCheck
);

