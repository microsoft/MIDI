// Copyright (c) Microsoft Corporation and Contributors.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://aka.ms/midi
// ============================================================================

import "MidiApiContracts.idl";


import "MidiFunctionBlock.idl";

import "IMidiEndpointMessageProcessingPlugin.idl";
import "MidiStreamConfigRequestReceivedEventArgs.idl";

namespace Microsoft.Windows.Devices.Midi2.Endpoints.Virtual
{
    [contract(MidiEndpointsVirtualApiContract, 1)]
    [interface_name("Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.IMidiVirtualDevice", 8087b303-0519-31d1-c0de-dd00000f0000)]
    runtimeclass MidiVirtualDevice : Microsoft.Windows.Devices.Midi2.IMidiEndpointMessageProcessingPlugin
    {
        String DeviceEndpointDeviceId{ get; };
        //String ClientEndpointDeviceId{ get; };    // this is not available at initial creation time
        Guid AssociationId{ get; };

        IMapView<UInt8, Microsoft.Windows.Devices.Midi2.MidiFunctionBlock> FunctionBlocks{ get; };
        
        Boolean UpdateFunctionBlock(Microsoft.Windows.Devices.Midi2.MidiFunctionBlock block);
        Boolean UpdateEndpointName(String name);

        Boolean SuppressHandledMessages;

        event Windows.Foundation.TypedEventHandler<MidiVirtualDevice, MidiStreamConfigRequestReceivedEventArgs> StreamConfigRequestReceived;
    }
}