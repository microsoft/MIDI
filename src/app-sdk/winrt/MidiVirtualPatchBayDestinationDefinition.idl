// Copyright (c) Microsoft Corporation and Contributors.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://aka.ms/midi
// ============================================================================

import "MidiApiContracts.idl";

import "MidiGroup.idl";

namespace Microsoft.Windows.Devices.Midi2.VirtualPatchBay
{
    [experimental]
    [interface_name("Microsoft.Windows.Devices.Midi2.VirtualPatchBay.IMidiVirtualPatchBayDestinationDefinition")]
    runtimeclass MidiVirtualPatchBayDestinationDefinition
    {
        MidiVirtualPatchBayDestinationDefinition();

        Boolean IsEnabled;

        String EndpointDeviceId;            // TODO: May want to have fuzzy match here

        // first group is incoming group. Second group is the group to transform it into in the destination
        // If this map is empty, we map 1:1
        // source group must be unique (0-15), but destination group can be duplicated to allow mapping multiple
        // source groups to a single destination group. The opposite is not true, however - one source group
        // cannot be mapped to multiple destination groups, as that would require duplicating messages
        // This group map is also how we handle MIDI 1.0 devices and mapping to the correct port/cable.
        IMap<Microsoft.Windows.Devices.Midi2.MidiGroup, Microsoft.Windows.Devices.Midi2.MidiGroup> GroupTransformMap{ get; };
    }
}
