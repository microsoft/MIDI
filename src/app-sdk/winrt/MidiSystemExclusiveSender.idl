// Copyright (c) Microsoft Corporation and Contributors.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://aka.ms/midi
// ============================================================================

import "MidiApiContracts.idl";

import "MidiSystemExclusiveDataReaderFormatEnum.idl";
import "MidiSystemExclusiveDataFormatEnum.idl";

import "MidiSystemExclusiveSendProgress.idl";

import "MidiGroup.idl";
import "MidiChannel.idl";

import "MidiEndpointConnection.idl";

namespace Microsoft.Windows.Devices.Midi2.Utilities.SysExTransfer
{
    [experimental]
    [static_name("IMidiSystemExclusiveSenderStatics")]
    static runtimeclass MidiSystemExclusiveSender
    {
        // progress result is true if succeeded. Progress is number of units 
        // of data sent (for byte format, it's bytes, for UMP format, it's words)
        static Windows.Foundation.IAsyncOperationWithProgress<Boolean, MidiSystemExclusiveSendProgress> SendDataAsync(
            Microsoft.Windows.Devices.Midi2.MidiEndpointConnection destination, 
            Windows.Storage.Streams.IInputStream dataSource,
            MidiSystemExclusiveDataReaderFormat sourceReaderFormat,
            MidiSystemExclusiveDataFormat sysexDataFormat,
            UInt16 messageSpacingMilliseconds,
            Boolean changeGroup,
            Microsoft.Windows.Devices.Midi2.MidiGroup newGroup
        );

        static Windows.Foundation.IAsyncOperationWithProgress<Boolean, MidiSystemExclusiveSendProgress> SendDataAsync(
            Microsoft.Windows.Devices.Midi2.MidiEndpointConnection destination,
            Windows.Storage.Streams.IInputStream dataSource,
            MidiSystemExclusiveDataReaderFormat sourceReaderFormat,
            MidiSystemExclusiveDataFormat sysexDataFormat
        );

        static Windows.Foundation.IAsyncOperationWithProgress<Boolean, MidiSystemExclusiveSendProgress> SendDataAsync(
            Microsoft.Windows.Devices.Midi2.MidiEndpointConnection destination,
            Windows.Storage.Streams.IInputStream dataSource
        );


    }
}

