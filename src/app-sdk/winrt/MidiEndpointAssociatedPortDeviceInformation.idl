// Copyright (c) Microsoft Corporation and Contributors.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://aka.ms/midi
// ============================================================================

#include "midi_sdk_idl_defs.h"

import "MidiApiContracts.idl";
import "Midi1PortFlowEnum.idl";
import "MidiGroup.idl";

namespace Microsoft.Windows.Devices.Midi2
{
    [contract(MidiEnumerationApiContract, 1)]
    [interface_name("Microsoft.Windows.Devices.Midi2.IMidiEndpointAssociatedPortDeviceInformation", UUID_IMidiEndpointAssociatedPortDeviceInformation)]
    runtimeclass MidiEndpointAssociatedPortDeviceInformation : Windows.Foundation.IStringable
    {
        Guid ContainerId{ get; };               // container this exists in. It will be the same as the parent endpoint's. Here for convenience.
        String ParentDeviceInstanceId{ get; };  // device instance id of the endpoint (which is the id of its parent)
        String ParentEndpointDeviceId{ get; };  // device id of the owning Windows MIDI Services endpoint

        MidiGroup Group{ get; };                // the single group this MIDI 1.0 port is associated with

        Midi1PortFlow PortFlow{ get; };         // source (midi input) or destination (midi output)
        String PortName{ get; };                // friendly name (this is the WinMM port name)

        String PortDeviceId{ get; };            // device id in our tree (also used directly in WinRT MIDI 1.0)
        UInt32 PortNumber{ get; };              // current winmm port number (0..n)

        Windows.Devices.Enumeration.DeviceInformation DeviceInformation{ get; };    // the base WinRT Device Information object for this port
    }
}
