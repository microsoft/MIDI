// Copyright (c) Microsoft Corporation and Contributors.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://aka.ms/midi
// ============================================================================

import "MidiApiContracts.idl";


import "IMidiUniversalPacket.idl";

import "Midi1ChannelVoiceMessageStatusEnum.idl";
import "Midi2ChannelVoiceMessageStatusEnum.idl";

import "MidiMessageTypeEnum.idl";
import "MidiPacketTypeEnum.idl";

import "MidiGroup.idl";
import "MidiChannel.idl";


namespace Microsoft.Windows.Devices.Midi2.Messages
{
    [contract(MidiMessageUtilitiesApiContract, 1)]
    [static_name("Microsoft.Windows.Devices.Midi2.Messages.IMidiMessageHelperStatics", 8087b303-0519-31d1-c0de-ee0000800000)]
    static runtimeclass MidiMessageHelper
    {
        static Boolean ValidateMessage32MessageType(UInt32 word0);
        static Boolean ValidateMessage64MessageType(UInt32 word0);
        static Boolean ValidateMessage96MessageType(UInt32 word0);
        static Boolean ValidateMessage128MessageType(UInt32 word0);

        static Microsoft.Windows.Devices.Midi2.MidiMessageType GetMessageTypeFromMessageFirstWord(UInt32 word0);
        static Microsoft.Windows.Devices.Midi2.MidiPacketType GetPacketTypeFromMessageFirstWord(UInt32 word0);

        static Boolean MessageTypeHasGroupField(Microsoft.Windows.Devices.Midi2.MidiMessageType messageType);
        static UInt32 ReplaceGroupInMessageFirstWord(UInt32 word0, Microsoft.Windows.Devices.Midi2.MidiGroup newGroup);
        static Microsoft.Windows.Devices.Midi2.MidiGroup GetGroupFromMessageFirstWord(UInt32 word0);

        static UInt8 GetStatusFromUtilityMessage(UInt32 word0);
        static Midi1ChannelVoiceMessageStatus GetStatusFromMidi1ChannelVoiceMessage(UInt32 word0);
        static Midi2ChannelVoiceMessageStatus GetStatusFromMidi2ChannelVoiceMessageFirstWord(UInt32 word0);
        

        static UInt8 GetStatusBankFromFlexDataMessageFirstWord(UInt32 word0);
        static UInt8 GetStatusFromFlexDataMessageFirstWord(UInt32 word0);

        static UInt8 GetStatusFromSystemCommonMessage(UInt32 word0);

        static UInt8 GetStatusFromDataMessage64FirstWord(UInt32 word0);
        static UInt8 GetNumberOfBytesFromDataMessage64FirstWord(UInt32 word0);

        static UInt8 GetStatusFromDataMessage128FirstWord(UInt32 word0);
        static UInt8 GetNumberOfBytesFromDataMessage128FirstWord(UInt32 word0);


        static Boolean MessageTypeHasChannelField(Microsoft.Windows.Devices.Midi2.MidiMessageType messageType);
        static UInt32 ReplaceChannelInMessageFirstWord(UInt32 word0, Microsoft.Windows.Devices.Midi2.MidiChannel newChannel);
        static Microsoft.Windows.Devices.Midi2.MidiChannel GetChannelFromMessageFirstWord(UInt32 word0);

        static UInt8 GetFormFromStreamMessageFirstWord(UInt32 word0);
        static UInt16 GetStatusFromStreamMessageFirstWord(UInt32 word0);


        static String GetMessageDisplayNameFromFirstWord(UInt32 word0);
        static String GetNoteDisplayNameFromNoteIndex(UInt8 noteIndex);

        static Int16 GetNoteOctaveFromNoteIndex(UInt8 noteIndex);
        static Int16 GetNoteOctaveFromNoteIndex(UInt8 noteIndex, UInt8 middleCOctave);


        static IVector<Microsoft.Windows.Devices.Midi2.IMidiUniversalPacket> GetPacketListFromWordList(UInt64 timestamp, IIterable<UInt32> words);
        static IVector<UInt32> GetWordListFromPacketList(IIterable<Microsoft.Windows.Devices.Midi2.IMidiUniversalPacket> messages);
    };
}
